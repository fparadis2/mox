<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:UI="clr-namespace:Mox.UI">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Mox.NewUI;component/Themes/Generic.Basic.Resources.xaml" />
        <ResourceDictionary Source="/Mox.NewUI;component/Themes/Generic.Basic.Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Label -->
    <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource TextFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource TextFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource TextFontWeight}" />
    </Style>

    <!-- Error Template -->
    <ControlTemplate x:Key="ErrorTemplate">
        <Border BorderBrush="Yellow" CornerRadius="3" BorderThickness="1">
            <AdornedElementPlaceholder UI:Validation.AdornedElementToolTip="{Binding /ErrorContent}" />
        </Border>
    </ControlTemplate>

    <!-- TextBox -->
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource TextFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource TextFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource TextFontWeight}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="2,0,0,0" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Focusable="false" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                        <ScrollViewer Name="PART_ContentHost" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledTextBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Localization.Attributes="Value(Readable Modifiable None)" Property="Foreground" Value="{StaticResource TextBrush}" />
                <Setter Localization.Attributes="Value(Readable Modifiable None)" Property="Background" Value="{StaticResource BackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="true">
                <Setter Property="Foreground" Value="{StaticResource DisabledTextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Hint TextBox -->
    <Style x:Key="{x:Type UI:HintTextBox}" TargetType="{x:Type UI:HintTextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
    	<Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UI:HintTextBox}">
                    <Border Focusable="False" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                        <Grid Margin="{TemplateBinding Padding}">
                        	<Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                			</Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            <TextBlock x:Name="Hint" Text="{TemplateBinding HintText}" Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" FontStyle="Italic" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="6,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasText" Value="True">
                            <Setter TargetName="Hint" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Hint" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Search TextBox -->
    <Style x:Key="{x:Type UI:SearchTextBox}" TargetType="{x:Type UI:SearchTextBox}" BasedOn="{StaticResource {x:Type UI:HintTextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UI:SearchTextBox}">
                    <Border Focusable="False" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            <TextBlock x:Name="Hint" Text="{TemplateBinding HintText}" Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" FontStyle="Italic" Opacity="0.5" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="6,0,0,0"/>
                            <UI:IconButton x:Name="PART_ClearSearchButton" Grid.Column="1" IsEnabled="False" Focusable="False" VerticalAlignment="Center" Width="16" Height="16" ImageBrush="{StaticResource Icon_Search}" Margin="2,0,2,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasText" Value="True">
                            <Setter TargetName="Hint" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_ClearSearchButton" Property="IsEnabled" Value="True" />
                            <Setter TargetName="PART_ClearSearchButton" Property="ImageBrush" Value="{StaticResource Icon_Clear}" />
                            <Setter TargetName="PART_ClearSearchButton" Property="ToolTip" Value="Clear" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Hint" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ToolTip-->
    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Background" Value="{StaticResource DialogBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource TextFontFamily}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBrush}" />        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="3">
                        <ContentPresenter Margin="4,2,4,2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Editable TextBlock -->
    <Style x:Key="{x:Type UI:EditableTextBlock}" TargetType="{x:Type UI:EditableTextBlock}">
    	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UI:EditableTextBlock}">
                    <TextBlock Text="{TemplateBinding Text}" Margin="8,2,0,0" MinHeight="18" TextWrapping="{TemplateBinding TextWrapping}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type UI:EditableTextBlock}">
                            <TextBox x:Name="EditTextBox" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" AcceptsReturn="{TemplateBinding AcceptsReturn}" AcceptsTab="{TemplateBinding AcceptsTab}" TextWrapping="{TemplateBinding TextWrapping}" ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- ChatTextBox -->
    <Style x:Key="ChatTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource TextFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource TextFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource TextFontWeight}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="2,0,0,0" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Focusable="false" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                        <ScrollViewer Name="PART_ContentHost" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
