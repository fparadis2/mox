<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Game="clr-namespace:Mox.UI.Game"
    xmlns:ui="clr-namespace:Mox.UI"
    xmlns:shaders="clr-namespace:Mox.UI.Shaders">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Mox.NewUI;component/Themes/Generic.Basic.Resources.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- CardInteractionFeedbackControl -->
    <Style TargetType="{x:Type Game:CardInteractionFeedbackControl}">
        <Style.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <Color x:Key="NormalColor">MediumPurple</Color>
            <Color x:Key="HoverColor">White</Color>

            <Storyboard x:Key="Storyboard_Loaded">
                <DoubleAnimation Storyboard.TargetProperty="Radius" From="0.485" To="0.47" Duration="00:00:01.5" RepeatBehavior="Forever" AutoReverse="True" />
            </Storyboard>
            
            <Storyboard x:Key="Storyboard_FadeIn">
                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="00:00:00.250" />
            </Storyboard>
            <Storyboard x:Key="Storyboard_FadeOut">
                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="00:00:00.250" />
            </Storyboard>

            <Storyboard x:Key="Storyboard_Hover_In">
                <ColorAnimation Storyboard.TargetProperty="VignetteColor" To="{StaticResource HoverColor}" Duration="00:00:00.1" />
            </Storyboard>
            <Storyboard x:Key="Storyboard_Hover_Out">
                <ColorAnimation Storyboard.TargetProperty="VignetteColor" To="{StaticResource NormalColor}" Duration="00:00:00.1" />
            </Storyboard>
        </Style.Resources>

        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="VignetteColor" Value="{StaticResource NormalColor}" />
        <Setter Property="Opacity" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Game:CardInteractionFeedbackControl}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.Effect>
                            <shaders:VignetteEffect x:Name="_Effect" 
                                                    VignetteColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VignetteColor}"
                                                    Radius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Radius}"/>
                        </Grid.Effect>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard Storyboard="{StaticResource Storyboard_Loaded}" />
                        </EventTrigger>
                        <Trigger Property="IsHovered" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard_Hover_In}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard_Hover_Out}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsAvailable" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard_FadeIn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Storyboard_FadeOut}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CardControl -->
    <Style TargetType="{x:Type Game:CardControl}">
        
        <Style.Resources>
            <Style x:Key="CardControlButtonStyle" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        
        <Setter Property="Width" Value="480" />
        <Setter Property="Height" Value="680" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Game:CardControl}">
                    <Grid ui:CardZoomAdornerBehavior.Enabled="True" ui:CardZoomAdornerBehavior.TargetControl="{Binding ElementName=_CardZoomTarget}">
                        <Grid x:Name="_CardZoomTarget">
                            <Button x:Name="_Button" Style="{StaticResource CardControlButtonStyle}" Command="{Binding ChooseCommand}">
                                <Image SnapsToDevicePixels="True" ui:ImageService.Key="{Binding Image}" />
                            </Button>
                        </Grid>
                        <Game:CardInteractionFeedbackControl 
                            IsAvailable="{Binding ElementName=_Button, Path=IsEnabled}"
                            IsHovered="{TemplateBinding IsMouseOver}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SpellControl -->
    <Style TargetType="{x:Type Game:SpellControl}">
        
        <Style.Resources>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        </Style.Resources>

        <Setter Property="Width" Value="240" />
        <Setter Property="Height" Value="340" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Game:SpellControl}">
                    <Grid ui:CardZoomAdornerBehavior.Enabled="True" ui:CardZoomAdornerBehavior.TargetControl="{Binding ElementName=_ZoomTarget}">
                        <Grid x:Name="_ZoomTarget">
                            <Image x:Name="_Image" SnapsToDevicePixels="True" ui:ImageService.Key="{Binding Image}" ToolTip="{Binding AbilityText}"  />
                            <!-- Not working great
                            <Grid Visibility="{Binding ShowAbilityText, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Rectangle ClipToBounds="True">
                                    <Rectangle.Fill>
                                        <VisualBrush Visual="{Binding ElementName=_Image}" Stretch="None" />
                                    </Rectangle.Fill>
                                    <Rectangle.Effect>
                                        <BlurEffect Radius="30" />
                                    </Rectangle.Effect>
                                    <Rectangle.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Transparent" Offset="0"/>
                                            <GradientStop Color="Transparent" Offset="0.6"/>
                                            <GradientStop Color="White" Offset="0.65"/>
                                            <GradientStop Color="White" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <Grid Margin="17,220,17,34">
                                    <TextBlock Text="{Binding AbilityText}" FontFamily="{x:Static ui:Fonts.AbilityTextFont}" FontSize="13" TextWrapping="Wrap" />
                                </Grid>
                            </Grid>-->
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
