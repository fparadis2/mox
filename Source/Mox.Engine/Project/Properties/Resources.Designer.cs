//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mox.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mox.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///&lt;cardlist&gt;
        /// &lt;card&gt;
        ///  &lt;name&gt;&amp;quot;Ach! Hans, Run!&amp;quot;&lt;/name&gt;
        ///  &lt;cost&gt;2RRGG&lt;/cost&gt;
        ///  &lt;typelist&gt;
        ///   &lt;type&gt;Enchantment&lt;/type&gt;
        ///  &lt;/typelist&gt;
        ///  &lt;rulelist&gt;
        ///   &lt;rule&gt;At the beginning of your upkeep, you may say &amp;quot;Ach Hans, run It&amp;apos;s the . . .&amp;quot; and name a creature card. If you do, search your library for the named card, put it into play, then shuffle your library. That creature has haste. Remove it from the game at end of turn.&lt;/rule&gt;
        ///  &lt;/rulelist&gt;
        /// &lt;/card&gt;
        /// &lt;card&gt;
        ///  &lt;name&gt;A Display of My Dark Power&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string cards {
            get {
                return ResourceManager.GetString("cards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///&lt;metalist&gt;
        /// &lt;card&gt;
        ///  &lt;name&gt;&amp;quot;Ach! Hans, Run!&amp;quot;&lt;/name&gt;
        ///  &lt;instance&gt;
        ///   &lt;set&gt;UNH&lt;/set&gt;
        ///   &lt;rarity&gt;R&lt;/rarity&gt;
        ///   &lt;number&gt;116&lt;/number&gt;
        ///   &lt;artist&gt;Quinton Hoover&lt;/artist&gt;
        ///  &lt;/instance&gt;
        /// &lt;/card&gt;
        /// &lt;card&gt;
        ///  &lt;name&gt;A Display of My Dark Power&lt;/name&gt;
        ///  &lt;instance&gt;
        ///   &lt;set&gt;ARC&lt;/set&gt;
        ///   &lt;rarity&gt;C&lt;/rarity&gt;
        ///   &lt;number&gt;8&lt;/number&gt;
        ///   &lt;artist&gt;Jim Nelson&lt;/artist&gt;
        ///  &lt;/instance&gt;
        /// &lt;/card&gt;
        /// &lt;card&gt;
        ///  &lt;name&gt;AWOL&lt;/name&gt;
        ///  &lt;instance&gt;
        ///   &lt;set&gt;UNH&lt;/set&gt;
        ///   &lt;rarity&gt;C&lt;/rarity&gt;
        ///   &lt;number&gt;2&lt;/number&gt;
        ///   &lt;artist&gt;Stephen Tappin&lt;/artis [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string meta {
            get {
                return ResourceManager.GetString("meta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///&lt;setlist&gt;
        /// &lt;set&gt;
        ///  &lt;uncommon&gt;40&lt;/uncommon&gt;
        ///  &lt;name&gt;Alara Reborn&lt;/name&gt;
        ///  &lt;block&gt;Shards of Alara&lt;/block&gt;
        ///  &lt;cards&gt;145&lt;/cards&gt;
        ///  &lt;release-date&gt;2009-04-30&lt;/release-date&gt;
        ///  &lt;common&gt;60&lt;/common&gt;
        ///  &lt;code&gt;ARB&lt;/code&gt;
        ///  &lt;mythic-rare&gt;10&lt;/mythic-rare&gt;
        ///  &lt;rare&gt;35&lt;/rare&gt;
        /// &lt;/set&gt;
        /// &lt;set&gt;
        ///  &lt;uncommon&gt;43&lt;/uncommon&gt;
        ///  &lt;name&gt;Alliances&lt;/name&gt;
        ///  &lt;block&gt;Ice Age&lt;/block&gt;
        ///  &lt;cards&gt;199&lt;/cards&gt;
        ///  &lt;release-date&gt;1996-06-10&lt;/release-date&gt;
        ///  &lt;common&gt;112&lt;/common&gt;
        ///  &lt;code&gt;ALL&lt;/code&gt;
        ///  &lt;rare&gt;46&lt;/rare&gt;
        /// &lt;/set&gt;
        /// &lt;set&gt;
        ///  &lt;name&gt;Anthologies&lt;/nam [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string setinfo {
            get {
                return ResourceManager.GetString("setinfo", resourceCulture);
            }
        }
    }
}
