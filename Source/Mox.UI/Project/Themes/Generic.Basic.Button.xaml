<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Mox.UI;component/Themes/Generic.Basic.Resources.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <!-- ButtonBase -->
    <Style x:Key="{x:Type ButtonBase}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{StaticResource ButtonDefaultBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonDefaultBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="FontFamily" Value="{StaticResource TextFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource TextFontSize}" />
        <Setter Property="FontWeight" Value="{StaticResource TextFontWeight}" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisualStyle}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="ButtonTemplateGrid" Background="{TemplateBinding Background}" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="true" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Value="{StaticResource ButtonMouseOverBrush}" Property="Background" />
                            <Setter Value="{StaticResource ButtonMouseOverBorderBrush}" Property="BorderBrush" />
                            <Setter Value="{StaticResource ButtonMouseOverTextBrush}" Property="Foreground" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Value="{StaticResource ButtonPressedBrush}" Property="Background" />
                            <Setter Value="{StaticResource ButtonPressedBorderBrush}" Property="BorderBrush" />
                            <Setter Value="{StaticResource TextBrush}" Property="Foreground" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Value="{StaticResource ButtonDisabledBrush}" Property="Background" />
                            <Setter Value="{StaticResource ButtonDisabledBorderBrush}" Property="BorderBrush" />
                            <Setter Value="{StaticResource DisabledTextBrush}" Property="Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type ButtonBase}}">
        <Style.Triggers>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter Property="BorderThickness" Value="1.5, 1.5, 1.5, 1.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
