<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:Browser="clr-namespace:Mox.UI.Browser" 
    xmlns:UI="clr-namespace:Mox.UI" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <Style x:Key="{x:Type Browser:PageFrame}" TargetType="{x:Type Browser:PageFrame}">
    	<Setter Property="Background" Value="{StaticResource DialogBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Browser:PageFrame}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="0.938*"/>
                        </Grid.RowDefinitions>
                        <Button Margin="4" HorizontalAlignment="Left" VerticalAlignment="Center"
                            Content="{Binding GoBackText}" 
                            Command="{Binding GoBackCommand}" 
                            Visibility="{Binding CanGoBack, Converter={StaticResource booleanToVisibilityConverter}}" />
                        <Button Margin="4" HorizontalAlignment="Right" VerticalAlignment="Center"
                            Content="{Binding GoForwardText}" 
                            Command="{Binding GoForwardCommand}"
                            Visibility="{Binding CanGoForward, Converter={StaticResource booleanToVisibilityConverter}}" />
                        <TextBlock HorizontalAlignment="Center" Text="{Binding Title}" Foreground="White" FontSize="18" FontWeight="Bold" VerticalAlignment="Center" />
                        <ContentPresenter Content="{TemplateBinding Content}" Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SetIconComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Style.Resources>
            <Style TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="ClickMode" Value="Press"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="7">
                                <Path Data="M 0 0 L 3.5 4 L 7 0 Z" Fill="{TemplateBinding BorderBrush}" HorizontalAlignment="Left" Margin="3,1,3,0" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <ContentPresenter />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CubicEase EasingMode="EaseInOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="toggleButton">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" CornerRadius="7" Padding="2">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" MaxWidth="200" />
                            </Border>
                        </Popup>
                        <ToggleButton Grid.ColumnSpan="2" x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0" />
                        <ContentPresenter Grid.Column="1" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type Browser:CardEditionViewModel}">
                    <Image UI:ImageSourceBehavior.Source="{Binding SetImage.ImageSource}" ToolTip="{Binding ToolTip}" Margin="2" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Browser:CardControl}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Browser:CardControl}">
                    <DockPanel LastChildFill="False">
                        <Image x:Name="image" Source="{Binding CurrentEdition.CardImage.ImageSource}" Width="95" DockPanel.Dock="Left" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="2,2,0,2" />

                        <StackPanel Margin="6,0,0,0" MaxWidth="400" HorizontalAlignment="Left">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Name}" FontWeight="Bold">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{Binding Path=(Browser:CardControl.TitleColor), RelativeSource={RelativeSource TemplatedParent}}" />
                                    </TextBlock.Foreground>
                                </TextBlock>
                                <UI:SymbolTextBlock SymbolText="{Binding ManaCost}" VerticalAlignment="Center" Margin="15,0,0,0" />
                            </StackPanel>
                            <TextBlock Text="{Binding TypeLine}" />
                            <UI:SymbolTextBlock x:Name="rules" SymbolText="{Binding Rules}" UseStrictParsing="True" TextWrapping="Wrap" />
                        </StackPanel>

                        <ComboBox HorizontalContentAlignment="Right" DockPanel.Dock="Right" VerticalAlignment="Top"
                            ItemsSource="{Binding Editions}"
                            IsEnabled="{Binding HasMoreThanOneEdition}"
                            SelectedItem="{Binding CurrentEdition}"
                            ToolTipService.ShowOnDisabled="True" 
                            ToolTip="{Binding CurrentEdition.ToolTip}" 
                            Style="{StaticResource SetIconComboBoxStyle}" />

                    </DockPanel>
                    <ControlTemplate.Triggers>
                    	<Trigger Property="CardControlStyle" Value="Simple">
                    		<Setter Property="Visibility" TargetName="image" Value="Collapsed"/>
                    		<Setter Property="Visibility" TargetName="rules" Value="Collapsed"/>                    		
                    	</Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="CardBrowser_CardListBox_Style" TargetType="{x:Type ListBox}">
    	<Setter Property="BorderBrush" Value="{StaticResource BackgroundBrush}" />
    	<Setter Property="Background" Value="White" />
    	<Setter Property="Foreground" Value="Black" />
    	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
    	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ListBox}">
    				<Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
    					<ScrollViewer CanContentScroll="true" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Padding="{TemplateBinding Padding}">
    						<ItemsPresenter />
    					</ScrollViewer>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>

    <Style x:Key="CardBrowser_CardListBox_ItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Margin" Value="2,2,2,2"/>
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
        <Setter Property="Padding" Value="0,1,0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <StackPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Browser:CardControl.TitleColor)" Storyboard.TargetName="presenter">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FF435276"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="DarkGray"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="SelectedInactive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="DarkGray"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderBrush="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" CornerRadius="3" BorderThickness="1">
                            <ContentPresenter x:Name="presenter" />
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Browser:DeckControl}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Browser:DeckControl}">
                	<ControlTemplate.Resources>
                		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Name}" FontWeight="Bold" />
                            <TextBlock Margin="10,0,0,0" FontStyle="Italic" Foreground="{TemplateBinding AuthorForeground}">
                				<TextBlock.Text>
                					<MultiBinding StringFormat="by {0}">
                						<Binding Path="Author" />
                					</MultiBinding>
                				</TextBlock.Text>
                            </TextBlock>
                        </StackPanel>
                        <TextBlock Text="{Binding DisplayDescription}" Grid.Row="1" />
                        <StackPanel Orientation="Horizontal" Grid.Row="2" TextBlock.FontSize="10">
                        	<TextBlock Text="{Binding LastModificationTimeString}" FontStyle="Italic" Foreground="{TemplateBinding AuthorForeground}" ToolTip="{Binding LastModificationTimeToolTipString}" VerticalAlignment="Center" />
                            <StackPanel x:Name="ContextButtons" Orientation="Horizontal" Margin="8,0,0,0" Visibility="{TemplateBinding ShowContextButtons, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Button Content="Edit" Command="{Binding EditCommand}" />
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>